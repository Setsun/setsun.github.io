{"remainingRequest":"/Users/seanluo/@setsun/setsun.github.io/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/seanluo/@setsun/setsun.github.io/node_modules/babel-loader/lib/index.js!/Users/seanluo/@setsun/setsun.github.io/src/routes/Sketches/OctahedronDance/index.tsx","dependencies":[{"path":"/Users/seanluo/@setsun/setsun.github.io/src/routes/Sketches/OctahedronDance/index.tsx","mtime":1562401179127},{"path":"/Users/seanluo/@setsun/setsun.github.io/.babelrc","mtime":1559266060084},{"path":"/Users/seanluo/@setsun/setsun.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/seanluo/@setsun/setsun.github.io/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/seanluo/@setsun/setsun.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/seanluo/@setsun/setsun.github.io/src/routes/Sketches/OctahedronDance/index.tsx"],"names":["Octahedron","position","theta","animate","ref","scale","Math","cos","octahedron","current","set","useRender","defaultProps","BaseOctahedronDance","group","r","sin","THREE","degToRad","s","rotation","OctahedronDance","background"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\nimport React, { useRef } from 'react';\nimport { a } from 'react-spring/three';\nimport { Canvas, useRender } from 'react-three-fiber';\n\nfunction Octahedron({ position, theta, animate }) {\n  const ref = useRef<THREE.Mesh>();\n\n  useRender(() => {\n    if (animate) {\n      theta += 0.05;\n\n      const scale = Math.cos(theta);\n      const octahedron = ref.current;\n\n      octahedron.scale.set(scale, scale, scale);\n    }\n  });\n\n  return (\n    <a.mesh ref={ref} position={position}>\n      <octahedronGeometry attach=\"geometry\" />\n      <meshStandardMaterial attach=\"material\" color=\"grey\" transparent />\n    </a.mesh>\n  );\n}\n\nOctahedron.defaultProps = {\n  theta: 0,\n  position: [0, 0, 0],\n  animate: true,\n};\n\nfunction BaseOctahedronDance() {\n  const group = useRef<THREE.Mesh>();\n  let theta = 0;\n\n  useRender(() => {\n    // Some things maybe shouldn't be declarative, we're in the render-loop here with full access to the instance\n    const r = 5 * Math.sin(THREE.Math.degToRad((theta += 0.01)));\n    const s = Math.cos(THREE.Math.degToRad(theta * 2));\n    group.current.rotation.set(r, r, r);\n    group.current.scale.set(s, s, s);\n  });\n\n  return (\n    <a.mesh ref={group}>\n      <Octahedron position={[0, 0, 0]} animate={false} />\n      <Octahedron position={[0, 0.1, 0]} theta={0.5} />\n      <Octahedron position={[0, 0.2, 0]} theta={0.5} />\n      <Octahedron position={[0, 0.3, 0]} theta={0.5} />\n      <Octahedron position={[0, -0.1, 0]} theta={0.25} />\n      <Octahedron position={[0, -0.2, 0]} theta={0.25} />\n      <Octahedron position={[0, -0.3, 0]} theta={0.25} />\n      <Octahedron position={[0.1, 0, 0]} theta={0.75} />\n      <Octahedron position={[0.2, 0, 0]} theta={0.75} />\n      <Octahedron position={[0.3, 0, 0]} theta={0.75} />\n      <Octahedron position={[-0.1, 0, 0]} theta={1} />\n      <Octahedron position={[-0.2, 0, 0]} theta={1} />\n      <Octahedron position={[-0.3, 0, 0]} theta={1} />\n    </a.mesh>\n  );\n}\n\nexport default function OctahedronDance() {\n  return (\n    <Canvas style={{ background: '#272727' }}>\n      <ambientLight color=\"lightblue\" />\n      <pointLight color=\"white\" intensity={1} position={[10, 10, 10]} />\n      <BaseOctahedronDance />\n    </Canvas>\n  );\n}\n"]}]}