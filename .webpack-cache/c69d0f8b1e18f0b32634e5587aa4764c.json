{"remainingRequest":"/Users/seanluo/@setsun/setsun.github.io/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/seanluo/@setsun/setsun.github.io/node_modules/babel-loader/lib/index.js!/Users/seanluo/@setsun/setsun.github.io/src/components/withLazy/index.tsx","dependencies":[{"path":"/Users/seanluo/@setsun/setsun.github.io/src/components/withLazy/index.tsx","mtime":1556983545733},{"path":"/Users/seanluo/@setsun/setsun.github.io/.babelrc","mtime":1559266060084},{"path":"/Users/seanluo/@setsun/setsun.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/seanluo/@setsun/setsun.github.io/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/seanluo/@setsun/setsun.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:KGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHsKICBpZiAodHlwZW9mIGRlZmluZSA9PT0gImZ1bmN0aW9uIiAmJiBkZWZpbmUuYW1kKSB7CiAgICBkZWZpbmUoWyJleHBvcnRzIiwgInJlYWN0Il0sIGZhY3RvcnkpOwogIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgIT09ICJ1bmRlZmluZWQiKSB7CiAgICBmYWN0b3J5KGV4cG9ydHMsIHJlcXVpcmUoInJlYWN0IikpOwogIH0gZWxzZSB7CiAgICB2YXIgbW9kID0gewogICAgICBleHBvcnRzOiB7fQogICAgfTsKICAgIGZhY3RvcnkobW9kLmV4cG9ydHMsIGdsb2JhbC5yZWFjdCk7CiAgICBnbG9iYWwuaW5kZXggPSBtb2QuZXhwb3J0czsKICB9Cn0pKHRoaXMsIGZ1bmN0aW9uIChfZXhwb3J0cywgUmVhY3QpIHsKICAidXNlIHN0cmljdCI7CgogIHZhciBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCA9IHJlcXVpcmUoIi9Vc2Vycy9zZWFubHVvL0BzZXRzdW4vc2V0c3VuLmdpdGh1Yi5pby9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIik7CgogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgICB2YWx1ZTogdHJ1ZQogIH0pOwogIF9leHBvcnRzWyJkZWZhdWx0Il0gPSB2b2lkIDA7CiAgUmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChSZWFjdCk7CiAgdmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvc2Vhbmx1by9Ac2V0c3VuL3NldHN1bi5naXRodWIuaW8vc3JjL2NvbXBvbmVudHMvd2l0aExhenkvaW5kZXgudHN4IjsKCiAgKGZ1bmN0aW9uICgpIHsKICAgIHZhciBlbnRlck1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5lbnRlck1vZHVsZSA6IHVuZGVmaW5lZDsKICAgIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7CiAgfSkoKTsKCiAgdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWxbImRlZmF1bHQiXS5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogICAgcmV0dXJuIGE7CiAgfTsKCiAgZnVuY3Rpb24gd2l0aExhenkoaW1wb3J0Rm4pIHsKICAgIHZhciBmYWxsYmFjayA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgICBfX3NvdXJjZTogewogICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgbGluZU51bWJlcjogNQogICAgICB9LAogICAgICBfX3NlbGY6IHRoaXMKICAgIH0pOwogICAgdmFyIENvbXBvbmVudCA9IFJlYWN0LmxhenkoaW1wb3J0Rm4pOwoKICAgIHZhciBMYXp5Q29tcG9uZW50ID0gZnVuY3Rpb24gTGF6eUNvbXBvbmVudChwcm9wcykgewogICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5TdXNwZW5zZSwgewogICAgICAgIGZhbGxiYWNrOiBmYWxsYmFjaywKICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICAgIGxpbmVOdW1iZXI6IDEwCiAgICAgICAgfSwKICAgICAgICBfX3NlbGY6IHRoaXMKICAgICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIE9iamVjdC5hc3NpZ24oe30sIHByb3BzLCB7CiAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICBsaW5lTnVtYmVyOiAxMQogICAgICAgIH0sCiAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgIH0pKSk7CiAgICB9OyAvLyBhbGxvdyB1c2VycyB0byBwcmVsb2FkIGZpbGVzIGFzeW5jLCBieSBpbnZva2luZyB0aGUgZHluYW1pYyBpbXBvcnQgZGlyZWN0bHkKCgogICAgTGF6eUNvbXBvbmVudC5wcmVsb2FkID0gaW1wb3J0Rm47CiAgICByZXR1cm4gTGF6eUNvbXBvbmVudDsKICB9CgogIHZhciBfZGVmYXVsdCA9IHdpdGhMYXp5OwogIHZhciBfZGVmYXVsdDIgPSBfZGVmYXVsdDsKICBfZXhwb3J0c1siZGVmYXVsdCJdID0gX2RlZmF1bHQyOwogIDsKCiAgKGZ1bmN0aW9uICgpIHsKICAgIHZhciByZWFjdEhvdExvYWRlciA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdIDogdW5kZWZpbmVkOwoKICAgIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKHdpdGhMYXp5LCAid2l0aExhenkiLCAiL1VzZXJzL3NlYW5sdW8vQHNldHN1bi9zZXRzdW4uZ2l0aHViLmlvL3NyYy9jb21wb25lbnRzL3dpdGhMYXp5L2luZGV4LnRzeCIpOwogICAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoX2RlZmF1bHQsICJkZWZhdWx0IiwgIi9Vc2Vycy9zZWFubHVvL0BzZXRzdW4vc2V0c3VuLmdpdGh1Yi5pby9zcmMvY29tcG9uZW50cy93aXRoTGF6eS9pbmRleC50c3giKTsKICB9KSgpOwoKICA7CgogIChmdW5jdGlvbiAoKSB7CiAgICB2YXIgbGVhdmVNb2R1bGUgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwubGVhdmVNb2R1bGUgOiB1bmRlZmluZWQ7CiAgICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwogIH0pKCk7Cn0pOw=="},{"version":3,"sources":["/Users/seanluo/@setsun/setsun.github.io/src/components/withLazy/index.tsx"],"names":["withLazy","importFn","fallback","Component","React","lazy","LazyComponent","props","preload"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,WAASA,QAAT,CACEC,QADF,EAGE;AAAA,QADAC,QACA,uEADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACX;AACA,QAAMC,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAWJ,QAAX,CAAlB;;AAEA,QAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,aACpB,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,QAAQ,EAAEL,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,oBAAeK,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADoB;AAAA,KAAtB,CAHA,CASA;;;AACAD,IAAAA,aAAa,CAACE,OAAd,GAAwBP,QAAxB;AAEA,WAAOK,aAAP;AACD;;iBAEcN,Q;;;;;;;;;;;;4BAlBNA,Q","sourcesContent":["import * as React from 'react';\n\nfunction withLazy<P>(\n  importFn: () => Promise<{ default: React.ComponentType<P> }>,\n  fallback = <div />\n) {\n  const Component = React.lazy(importFn);\n\n  const LazyComponent = (props: React.PropsWithoutRef<P>) => (\n    <React.Suspense fallback={fallback}>\n      <Component {...props} />\n    </React.Suspense>\n  );\n\n  // allow users to preload files async, by invoking the dynamic import directly\n  LazyComponent.preload = importFn\n\n  return LazyComponent;\n}\n\nexport default withLazy;\n"]}]}